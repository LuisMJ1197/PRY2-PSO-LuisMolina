/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package application.view;

/**
 *
 * @author Luism
 */
public class ConfigurationPanel extends javax.swing.JPanel {

    /**
     * Creates new form ConfigurationPanel
     */
    public ConfigurationPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        mainMemorySizeLB = new javax.swing.JLabel();
        memorySizeSlider = new javax.swing.JSlider();
        jLabel9 = new javax.swing.JLabel();
        diskMemorySizeLB = new javax.swing.JLabel();
        diskMemorySlider = new javax.swing.JSlider();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        osDedicatedMemorySizeLB = new javax.swing.JLabel();
        osDedicatedMemorySlider = new javax.swing.JSlider();
        jLabel14 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        partitionSizeSlider = new javax.swing.JSlider();
        partitionSizeLB = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        segmentationActivateBT = new javax.swing.JToggleButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        fixedPartitionActivateBT = new javax.swing.JToggleButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        dynamicPartitionActivateBT = new javax.swing.JToggleButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        pagingActivateBT = new javax.swing.JToggleButton();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        frameSizeSlider = new javax.swing.JSlider();
        frameSizeLB = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        hrrnActivateBT = new javax.swing.JToggleButton();
        jPanel14 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        fcfsActivateBT = new javax.swing.JToggleButton();
        jPanel15 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        sjfActivateBT = new javax.swing.JToggleButton();
        jPanel16 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        srtActivateBT = new javax.swing.JToggleButton();
        jLabel15 = new javax.swing.JLabel();
        quantumSlider = new javax.swing.JSlider();
        jPanel17 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        rrActivateBT = new javax.swing.JToggleButton();
        quantumLB = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        saveBT = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(680, 450));
        setLayout(null);

        jPanel3.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel2.setText("Configuration");
        jLabel2.setPreferredSize(new java.awt.Dimension(65, 24));
        jPanel3.add(jLabel2);
        jLabel2.setBounds(10, 0, 80, 24);

        add(jPanel3);
        jPanel3.setBounds(10, 10, 660, 24);

        jTabbedPane1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(null);

        mainMemorySizeLB.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        mainMemorySizeLB.setForeground(new java.awt.Color(51, 51, 51));
        mainMemorySizeLB.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        mainMemorySizeLB.setText("16");
        jPanel4.add(mainMemorySizeLB);
        mainMemorySizeLB.setBounds(380, 10, 150, 20);

        memorySizeSlider.setBackground(new java.awt.Color(255, 255, 255));
        memorySizeSlider.setMaximum(16);
        memorySizeSlider.setMinimum(4);
        memorySizeSlider.setMinorTickSpacing(1);
        memorySizeSlider.setValue(4);
        memorySizeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                memorySizeSliderStateChanged(evt);
            }
        });
        jPanel4.add(memorySizeSlider);
        memorySizeSlider.setBounds(130, 10, 250, 30);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("* Should be power of two *");
        jPanel4.add(jLabel9);
        jLabel9.setBounds(200, 150, 140, 30);

        diskMemorySizeLB.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        diskMemorySizeLB.setForeground(new java.awt.Color(51, 51, 51));
        diskMemorySizeLB.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        diskMemorySizeLB.setText("16");
        jPanel4.add(diskMemorySizeLB);
        diskMemorySizeLB.setBounds(380, 70, 150, 20);

        diskMemorySlider.setBackground(new java.awt.Color(255, 255, 255));
        diskMemorySlider.setMaximum(16);
        diskMemorySlider.setMinimum(4);
        diskMemorySlider.setMinorTickSpacing(1);
        diskMemorySlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                diskMemorySliderStateChanged(evt);
            }
        });
        jPanel4.add(diskMemorySlider);
        diskMemorySlider.setBounds(130, 70, 250, 30);

        jLabel11.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel11.setText("Disk memory size: ");
        jPanel4.add(jLabel11);
        jLabel11.setBounds(10, 70, 110, 30);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("* Will limit maximum number of process *");
        jPanel4.add(jLabel12);
        jLabel12.setBounds(170, 170, 200, 30);

        osDedicatedMemorySizeLB.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        osDedicatedMemorySizeLB.setForeground(new java.awt.Color(51, 51, 51));
        osDedicatedMemorySizeLB.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        osDedicatedMemorySizeLB.setText("16");
        jPanel4.add(osDedicatedMemorySizeLB);
        osDedicatedMemorySizeLB.setBounds(380, 130, 150, 20);

        osDedicatedMemorySlider.setBackground(new java.awt.Color(255, 255, 255));
        osDedicatedMemorySlider.setMaximum(5);
        osDedicatedMemorySlider.setMinimum(1);
        osDedicatedMemorySlider.setMinorTickSpacing(1);
        osDedicatedMemorySlider.setValue(1);
        osDedicatedMemorySlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                osDedicatedMemorySliderStateChanged(evt);
            }
        });
        jPanel4.add(osDedicatedMemorySlider);
        osDedicatedMemorySlider.setBounds(130, 130, 250, 30);

        jLabel14.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel14.setText("OS dedicated memory:");
        jPanel4.add(jLabel14);
        jLabel14.setBounds(10, 130, 110, 30);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel7.setText("Main memory size: ");
        jPanel4.add(jLabel7);
        jLabel7.setBounds(10, 10, 110, 30);

        jLabel19.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 0, 0));
        jLabel19.setText("* Should be power of two *");
        jPanel4.add(jLabel19);
        jLabel19.setBounds(200, 30, 140, 30);

        jLabel20.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 0, 0));
        jLabel20.setText("* Should be power of two *");
        jPanel4.add(jLabel20);
        jLabel20.setBounds(200, 90, 140, 30);

        jTabbedPane1.addTab("Memory size", jPanel4);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setLayout(null);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel8.setText("Partition size:");
        jPanel9.add(jLabel8);
        jLabel8.setBounds(30, 50, 90, 30);

        jLabel21.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 0, 0));
        jLabel21.setText("* Should be power of two *");
        jPanel9.add(jLabel21);
        jLabel21.setBounds(430, 50, 140, 20);

        partitionSizeSlider.setBackground(new java.awt.Color(255, 255, 255));
        partitionSizeSlider.setMaximum(8);
        partitionSizeSlider.setMinimum(1);
        partitionSizeSlider.setToolTipText("");
        partitionSizeSlider.setValue(1);
        partitionSizeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                partitionSizeSliderStateChanged(evt);
            }
        });
        jPanel9.add(partitionSizeSlider);
        partitionSizeSlider.setBounds(110, 50, 250, 30);

        partitionSizeLB.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        partitionSizeLB.setForeground(new java.awt.Color(51, 51, 51));
        partitionSizeLB.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        partitionSizeLB.setText("16");
        jPanel9.add(partitionSizeLB);
        partitionSizeLB.setBounds(360, 50, 150, 20);

        jPanel8.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel6.setText("Segmentation");
        jLabel6.setPreferredSize(new java.awt.Dimension(65, 24));
        jPanel8.add(jLabel6);
        jLabel6.setBounds(10, 0, 100, 24);

        segmentationActivateBT.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        segmentationActivateBT.setText("Activate");
        segmentationActivateBT.setActionCommand("activateSegmentation");
        segmentationActivateBT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        segmentationActivateBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                segmentationActivateBTActionPerformed(evt);
            }
        });
        jPanel8.add(segmentationActivateBT);
        segmentationActivateBT.setBounds(540, 0, 90, 23);

        jPanel9.add(jPanel8);
        jPanel8.setBounds(10, 240, 630, 24);

        jPanel10.setLayout(null);

        jLabel18.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel18.setText("Fixed Partitioning");
        jLabel18.setPreferredSize(new java.awt.Dimension(65, 24));
        jPanel10.add(jLabel18);
        jLabel18.setBounds(10, 0, 100, 24);

        fixedPartitionActivateBT.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        fixedPartitionActivateBT.setText("Activate");
        fixedPartitionActivateBT.setActionCommand("activateFixed");
        fixedPartitionActivateBT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fixedPartitionActivateBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fixedPartitionActivateBTActionPerformed(evt);
            }
        });
        jPanel10.add(fixedPartitionActivateBT);
        fixedPartitionActivateBT.setBounds(540, 0, 90, 23);

        jPanel9.add(jPanel10);
        jPanel10.setBounds(10, 10, 630, 24);

        jPanel11.setLayout(null);

        jLabel22.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel22.setText("Dynamic Partitioning");
        jLabel22.setPreferredSize(new java.awt.Dimension(65, 24));
        jPanel11.add(jLabel22);
        jLabel22.setBounds(10, 0, 100, 24);

        dynamicPartitionActivateBT.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        dynamicPartitionActivateBT.setText("Activate");
        dynamicPartitionActivateBT.setActionCommand("activateDynamic");
        dynamicPartitionActivateBT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dynamicPartitionActivateBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dynamicPartitionActivateBTActionPerformed(evt);
            }
        });
        jPanel11.add(dynamicPartitionActivateBT);
        dynamicPartitionActivateBT.setBounds(540, 0, 90, 23);

        jPanel9.add(jPanel11);
        jPanel11.setBounds(10, 100, 630, 24);

        jPanel12.setLayout(null);

        jLabel23.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel23.setText("Paging");
        jLabel23.setPreferredSize(new java.awt.Dimension(65, 24));
        jPanel12.add(jLabel23);
        jLabel23.setBounds(10, 0, 100, 24);

        pagingActivateBT.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        pagingActivateBT.setText("Activate");
        pagingActivateBT.setActionCommand("activatePaging");
        pagingActivateBT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pagingActivateBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagingActivateBTActionPerformed(evt);
            }
        });
        jPanel12.add(pagingActivateBT);
        pagingActivateBT.setBounds(540, 0, 90, 23);

        jPanel9.add(jPanel12);
        jPanel12.setBounds(10, 150, 630, 24);

        jLabel24.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel24.setText("Frame size:");
        jPanel9.add(jLabel24);
        jLabel24.setBounds(30, 190, 90, 30);

        jLabel25.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 0, 0));
        jLabel25.setText("* Should be power of two *");
        jPanel9.add(jLabel25);
        jLabel25.setBounds(430, 190, 140, 14);

        frameSizeSlider.setBackground(new java.awt.Color(255, 255, 255));
        frameSizeSlider.setMaximum(8);
        frameSizeSlider.setMinimum(1);
        frameSizeSlider.setToolTipText("");
        frameSizeSlider.setValue(1);
        frameSizeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                frameSizeSliderStateChanged(evt);
            }
        });
        jPanel9.add(frameSizeSlider);
        frameSizeSlider.setBounds(110, 190, 250, 30);

        frameSizeLB.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        frameSizeLB.setForeground(new java.awt.Color(51, 51, 51));
        frameSizeLB.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        frameSizeLB.setText("16");
        jPanel9.add(frameSizeLB);
        frameSizeLB.setBounds(360, 190, 150, 20);

        jTabbedPane1.addTab("Memory management", jPanel9);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(null);

        jPanel13.setLayout(null);

        jLabel27.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel27.setText("Highest Response Ration Next (HRRN)");
        jLabel27.setPreferredSize(new java.awt.Dimension(65, 24));
        jPanel13.add(jLabel27);
        jLabel27.setBounds(10, 0, 270, 24);

        hrrnActivateBT.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        hrrnActivateBT.setText("Activate");
        hrrnActivateBT.setActionCommand("activateHRRN");
        hrrnActivateBT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hrrnActivateBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrrnActivateBTActionPerformed(evt);
            }
        });
        jPanel13.add(hrrnActivateBT);
        hrrnActivateBT.setBounds(540, 0, 90, 23);

        jPanel5.add(jPanel13);
        jPanel13.setBounds(10, 130, 630, 24);

        jPanel14.setLayout(null);

        jLabel28.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel28.setText("First Come First Server (FCFS)");
        jLabel28.setPreferredSize(new java.awt.Dimension(65, 24));
        jPanel14.add(jLabel28);
        jLabel28.setBounds(10, 0, 270, 24);

        fcfsActivateBT.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        fcfsActivateBT.setText("Activate");
        fcfsActivateBT.setActionCommand("activateFCFS");
        fcfsActivateBT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fcfsActivateBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fcfsActivateBTActionPerformed(evt);
            }
        });
        jPanel14.add(fcfsActivateBT);
        fcfsActivateBT.setBounds(540, 0, 90, 23);

        jPanel5.add(jPanel14);
        jPanel14.setBounds(10, 10, 630, 24);

        jPanel15.setLayout(null);

        jLabel29.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel29.setText("Shortest Job First (SJF)");
        jLabel29.setPreferredSize(new java.awt.Dimension(65, 24));
        jPanel15.add(jLabel29);
        jLabel29.setBounds(10, 0, 270, 24);

        sjfActivateBT.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        sjfActivateBT.setText("Activate");
        sjfActivateBT.setActionCommand("activateSRT");
        sjfActivateBT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sjfActivateBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sjfActivateBTActionPerformed(evt);
            }
        });
        jPanel15.add(sjfActivateBT);
        sjfActivateBT.setBounds(540, 0, 90, 23);

        jPanel5.add(jPanel15);
        jPanel15.setBounds(10, 50, 630, 24);

        jPanel16.setLayout(null);

        jLabel30.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel30.setText("Shortest Remaining Time (SRT)");
        jLabel30.setPreferredSize(new java.awt.Dimension(65, 24));
        jPanel16.add(jLabel30);
        jLabel30.setBounds(10, 0, 270, 24);

        srtActivateBT.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        srtActivateBT.setText("Activate");
        srtActivateBT.setActionCommand("activateSJF");
        srtActivateBT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        srtActivateBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srtActivateBTActionPerformed(evt);
            }
        });
        jPanel16.add(srtActivateBT);
        srtActivateBT.setBounds(540, 0, 90, 23);

        jPanel5.add(jPanel16);
        jPanel16.setBounds(10, 90, 630, 24);

        jLabel15.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel15.setText("Quantum:");
        jPanel5.add(jLabel15);
        jLabel15.setBounds(30, 210, 80, 30);

        quantumSlider.setBackground(new java.awt.Color(255, 255, 255));
        quantumSlider.setMaximum(10);
        quantumSlider.setMinimum(1);
        quantumSlider.setMinorTickSpacing(1);
        quantumSlider.setValue(1);
        quantumSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                quantumSliderStateChanged(evt);
            }
        });
        jPanel5.add(quantumSlider);
        quantumSlider.setBounds(110, 210, 240, 30);

        jPanel17.setLayout(null);

        jLabel32.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel32.setText("Round Robin (RR)");
        jLabel32.setPreferredSize(new java.awt.Dimension(65, 24));
        jPanel17.add(jLabel32);
        jLabel32.setBounds(10, 0, 100, 24);

        rrActivateBT.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        rrActivateBT.setText("Activate");
        rrActivateBT.setActionCommand("activateRR");
        rrActivateBT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rrActivateBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rrActivateBTActionPerformed(evt);
            }
        });
        jPanel17.add(rrActivateBT);
        rrActivateBT.setBounds(540, 0, 90, 23);

        jPanel5.add(jPanel17);
        jPanel17.setBounds(10, 170, 630, 24);

        quantumLB.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        quantumLB.setForeground(new java.awt.Color(51, 51, 51));
        quantumLB.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        quantumLB.setText("1");
        jPanel5.add(quantumLB);
        quantumLB.setBounds(390, 210, 20, 20);

        jLabel17.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 51, 51));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel17.setText("q =");
        jPanel5.add(jLabel17);
        jLabel17.setBounds(370, 210, 20, 20);

        jTabbedPane1.addTab("Scheduler", jPanel5);

        add(jTabbedPane1);
        jTabbedPane1.setBounds(10, 40, 660, 360);

        saveBT.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        saveBT.setText("Save");
        saveBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBTActionPerformed(evt);
            }
        });
        add(saveBT);
        saveBT.setBounds(240, 410, 180, 30);

        jLabel26.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 0, 0));
        jLabel26.setText("* Will reset all components *");
        add(jLabel26);
        jLabel26.setBounds(430, 410, 140, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void saveBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveBTActionPerformed

    private void memorySizeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_memorySizeSliderStateChanged
        int memorySize = (int) Math.pow(2, (double) this.memorySizeSlider.getValue());
        String text = Integer.toString(memorySize) + "KB";
        if (memorySize >= 1024) {
            text = Integer.toString((int) (memorySize / 1024.0)) + "MB";
        }
        this.mainMemorySizeLB.setText(
                text
        );
    }//GEN-LAST:event_memorySizeSliderStateChanged

    private void diskMemorySliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_diskMemorySliderStateChanged
        int memorySize = (int) Math.pow(2, (double) this.diskMemorySlider.getValue());
        String text = Integer.toString(memorySize) + "KB";
        if (memorySize >= 1024) {
            text = Integer.toString((int) (memorySize / 1024.0)) + "MB";
        }
        this.diskMemorySizeLB.setText(
                text
        );
    }//GEN-LAST:event_diskMemorySliderStateChanged

    private void osDedicatedMemorySliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_osDedicatedMemorySliderStateChanged
        int memorySize = (int) Math.pow(2, (double) this.osDedicatedMemorySlider.getValue());
        String text = Integer.toString(memorySize) + "KB";
        if (memorySize >= 1024) {
            text = Integer.toString((int) (memorySize / 1024.0)) + "MB";
        }
        this.osDedicatedMemorySizeLB.setText(
                text
        );
    }//GEN-LAST:event_osDedicatedMemorySliderStateChanged

    private void fixedPartitionActivateBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fixedPartitionActivateBTActionPerformed
        this.activateFixed();
    }//GEN-LAST:event_fixedPartitionActivateBTActionPerformed

    private void pagingActivateBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagingActivateBTActionPerformed
        this.activatePaging();
    }//GEN-LAST:event_pagingActivateBTActionPerformed

    private void dynamicPartitionActivateBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dynamicPartitionActivateBTActionPerformed
        this.activateDynamic();
    }//GEN-LAST:event_dynamicPartitionActivateBTActionPerformed

    private void segmentationActivateBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_segmentationActivateBTActionPerformed
        this.activateSegmentation();
    }//GEN-LAST:event_segmentationActivateBTActionPerformed

    private void fcfsActivateBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fcfsActivateBTActionPerformed
        this.activateFCFS();
    }//GEN-LAST:event_fcfsActivateBTActionPerformed

    private void sjfActivateBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sjfActivateBTActionPerformed
        this.activateSJF();
    }//GEN-LAST:event_sjfActivateBTActionPerformed

    private void srtActivateBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srtActivateBTActionPerformed
        this.activateSRT();
    }//GEN-LAST:event_srtActivateBTActionPerformed

    private void hrrnActivateBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrrnActivateBTActionPerformed
        this.activateHRRN();
    }//GEN-LAST:event_hrrnActivateBTActionPerformed

    private void rrActivateBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rrActivateBTActionPerformed
        this.activateRR();
    }//GEN-LAST:event_rrActivateBTActionPerformed

    private void partitionSizeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_partitionSizeSliderStateChanged
        int partitionSize = (int) Math.pow(2, (double) this.partitionSizeSlider.getValue());
        String text = Integer.toString(partitionSize) + "KB";
        if (partitionSize >= 1024) {
            text = Integer.toString((int) (partitionSize / 1024.0)) + "MB";
        }
        this.partitionSizeLB.setText(
                text
        );
    }//GEN-LAST:event_partitionSizeSliderStateChanged

    private void frameSizeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_frameSizeSliderStateChanged
        int frameSize = (int) Math.pow(2, (double) this.frameSizeSlider.getValue());
        String text = Integer.toString(frameSize) + "KB";
        if (frameSize >= 1024) {
            text = Integer.toString((int) (frameSize / 1024.0)) + "MB";
        }
        this.frameSizeLB.setText(
                text
        );
    }//GEN-LAST:event_frameSizeSliderStateChanged

    private void quantumSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_quantumSliderStateChanged
        this.quantumLB.setText(Integer.toString(this.quantumSlider.getValue()));
    }//GEN-LAST:event_quantumSliderStateChanged

    
    public void activateFCFS() {
        this.quantumSlider.setEnabled(false);
        this.fcfsActivateBT.setText("Activated");
        this.srtActivateBT.setText("Activate");
        this.sjfActivateBT.setText("Activate");
        this.hrrnActivateBT.setText("Activate");
        this.rrActivateBT.setText("Activate");
    }
    
    public void activateSRT() {
        this.quantumSlider.setEnabled(false);
        this.fcfsActivateBT.setText("Activate");
        this.srtActivateBT.setText("Activated");
        this.sjfActivateBT.setText("Activate");
        this.hrrnActivateBT.setText("Activate");
        this.rrActivateBT.setText("Activate");
    }
    
    public void activateSJF() {
        this.quantumSlider.setEnabled(false);
        this.fcfsActivateBT.setText("Activate");
        this.srtActivateBT.setText("Activate");
        this.sjfActivateBT.setText("Activated");
        this.hrrnActivateBT.setText("Activate");
        this.rrActivateBT.setText("Activate");
    }
    
    public void activateRR() {
        this.quantumSlider.setEnabled(true);
        this.fcfsActivateBT.setText("Activate");
        this.srtActivateBT.setText("Activate");
        this.sjfActivateBT.setText("Activate");
        this.hrrnActivateBT.setText("Activate");
        this.rrActivateBT.setText("Activated");
    }
    
    public void activateHRRN() {
        this.quantumSlider.setEnabled(false);
        this.fcfsActivateBT.setText("Activate");
        this.srtActivateBT.setText("Activate");
        this.sjfActivateBT.setText("Activate");
        this.hrrnActivateBT.setText("Activated");
        this.rrActivateBT.setText("Activate");
    }

    public void activateFixed() {
        this.partitionSizeSlider.setEnabled(true);
        this.frameSizeSlider.setEnabled(false);
        this.fixedPartitionActivateBT.setText("Activated");
        this.dynamicPartitionActivateBT.setText("Activate");
        this.pagingActivateBT.setText("Activate");
        this.segmentationActivateBT.setText("Activate");
        
    }
    
    public void activateDynamic() {
        this.partitionSizeSlider.setEnabled(false);
        this.frameSizeSlider.setEnabled(false);
        this.fixedPartitionActivateBT.setText("Activate");
        this.dynamicPartitionActivateBT.setText("Activated");
        this.pagingActivateBT.setText("Activate");
        this.segmentationActivateBT.setText("Activate");
    }
    
    public void activatePaging() {
        this.partitionSizeSlider.setEnabled(false);
        this.frameSizeSlider.setEnabled(true);
        this.fixedPartitionActivateBT.setText("Activate");
        this.dynamicPartitionActivateBT.setText("Activate");
        this.pagingActivateBT.setText("Activated");
        this.segmentationActivateBT.setText("Activate");
    }
    
    public void activateSegmentation() {
        this.partitionSizeSlider.setEnabled(false);
        this.frameSizeSlider.setEnabled(false);
        this.fixedPartitionActivateBT.setText("Activate");
        this.dynamicPartitionActivateBT.setText("Activate");
        this.pagingActivateBT.setText("Activate");
        this.segmentationActivateBT.setText("Activated");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel diskMemorySizeLB;
    public javax.swing.JSlider diskMemorySlider;
    public javax.swing.JToggleButton dynamicPartitionActivateBT;
    public javax.swing.JToggleButton fcfsActivateBT;
    public javax.swing.JToggleButton fixedPartitionActivateBT;
    private javax.swing.JLabel frameSizeLB;
    public javax.swing.JSlider frameSizeSlider;
    public javax.swing.JToggleButton hrrnActivateBT;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTabbedPane jTabbedPane1;
    public javax.swing.JLabel mainMemorySizeLB;
    public javax.swing.JSlider memorySizeSlider;
    public javax.swing.JLabel osDedicatedMemorySizeLB;
    public javax.swing.JSlider osDedicatedMemorySlider;
    public javax.swing.JToggleButton pagingActivateBT;
    private javax.swing.JLabel partitionSizeLB;
    public javax.swing.JSlider partitionSizeSlider;
    private javax.swing.JLabel quantumLB;
    public javax.swing.JSlider quantumSlider;
    public javax.swing.JToggleButton rrActivateBT;
    public javax.swing.JButton saveBT;
    public javax.swing.JToggleButton segmentationActivateBT;
    public javax.swing.JToggleButton sjfActivateBT;
    public javax.swing.JToggleButton srtActivateBT;
    // End of variables declaration//GEN-END:variables
}
